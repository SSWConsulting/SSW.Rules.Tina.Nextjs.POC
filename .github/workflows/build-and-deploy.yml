name: Deploy Next.js site to Azure Static Web Apps

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      run_id:
        description: This is the id of the Content Workflow
        required: true
        type: string
      branch_name:
        description: This is the branch name of the workflow
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_ALGOLIA_APP_ID:    ${{ secrets.NEXT_PUBLIC_ALGOLIA_APP_ID }}
      NEXT_PUBLIC_ALGOLIA_ADMIN_KEY: ${{ secrets.NEXT_PUBLIC_ALGOLIA_ADMIN_KEY }}
      NEXT_PUBLIC_ALGOLIA_INDEX_NAME: ${{ secrets.NEXT_PUBLIC_ALGOLIA_INDEX_NAME }}
      NEXT_PUBLIC_ALGOLIA_API_KEY: ${{ secrets.NEXT_PUBLIC_ALGOLIA_API_KEY }}
      CONTENT_REPO: SSWConsulting/SSW.Rules.Content

    steps:

      # TODO - Uncomment this while we'll get GitHub Token
      # - name: Generate a token
      #   id: generate-token
      #   uses: actions/create-github-app-token@v2
      #   with:
      #     app-id: ${{ vars.POC_APP_ID }}
      #     private-key: ${{ secrets.POC_APP_PRIVATE_KEY }}
      #     owner: SSWConsulting
      #     repositories: SSW.Rules.Tina.Nextjs.POC

      - name: Checkout SSW.Rules.Content
        uses: actions/checkout@v4
        with:
          repository: SSWConsulting/SSW.Rules.Content
          token: ${{ secrets.POC_PAT_GILLES }} # TODO - Change that with the GitHub Token when configured

      - uses: actions/checkout@v4
        with:
          path: website

      - uses: actions/setup-node@v4
        with:
          node-version-file: website/.nvmrc

      - uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false

      - run: pnpm install --frozen-lockfile
        working-directory: website

      - name: Install GitHub CLI + jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh jq

      # Get Github Workflow Id and the branch that generated the artifact
      - name: Read metadata from dispatch payload
        id: meta
        run: |
          echo "run_id=${{ github.event.inputs.run_id }}"   >> $GITHUB_OUTPUT
          echo "branch=${{ github.event.inputs.branch_name }}" >> $GITHUB_OUTPUT

      # Download the artifact that contains rule-to-categories json file
      - name: Download rule-to-categories artifact
        run: |
          mkdir -p website/tmp
          gh run download   "${{ steps.meta.outputs.run_id }}" \
            --repo "$CONTENT_REPO" \
            -n rule-to-categories \
            --dir website/tmp
        env:
          GH_TOKEN: ${{ secrets.POC_PAT_GILLES }} # TODO - Change that with the GitHub Token when configured
          CONTENT_REPO: SSWConsulting/SSW.Rules.Content

      - run: |
          mv "$(find website/tmp -name rule-to-categories.json -print -quit)" \
          website/rule-to-categories.json

      # Download the artifact that contains category-uri-title-map json file
      - name: Download category-uri-title-map artifact
        run: |
          mkdir -p website/tmp
          gh run download   "${{ steps.meta.outputs.run_id }}" \
            --repo "$CONTENT_REPO" \
            -n category-uri-title-map \
            --dir website/tmp
        env:
          GH_TOKEN: ${{ secrets.POC_PAT_GILLES }} # TODO - Change that with the GitHub Token when configured
          CONTENT_REPO: SSWConsulting/SSW.Rules.Content

      - run: |
          mv "$(find website/tmp -name category-uri-title-map.json -print -quit)" \
          website/category-uri-title-map.json

      - run: pnpm build
        working-directory: website
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          NEXT_PUBLIC_TINA_BRANCH:    ${{ github.event.inputs.branch_name || 'tina/migration-dev-content' }}
          TINA_TOKEN:                 ${{ secrets.TINA_TOKEN }}
          TINA_SEARCH_TOKEN:          ${{ secrets.TINA_SEARCH_TOKEN }}

      - run: cp website/staticwebapp.config.json website/out/

      - uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: upload
          skip_app_build: true
          skip_api_build: true
          app_location: website/out
