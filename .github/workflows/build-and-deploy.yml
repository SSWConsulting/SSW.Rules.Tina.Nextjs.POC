name: Deploy Next.js site to Azure Static Web Apps

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_ALGOLIA_APP_ID:    ${{ secrets.NEXT_PUBLIC_ALGOLIA_APP_ID }}
      NEXT_PUBLIC_ALGOLIA_ADMIN_KEY: ${{ secrets.NEXT_PUBLIC_ALGOLIA_ADMIN_KEY }}
      NEXT_PUBLIC_ALGOLIA_INDEX_NAME: ${{ secrets.NEXT_PUBLIC_ALGOLIA_INDEX_NAME }}
      NEXT_PUBLIC_ALGOLIA_API_KEY: ${{ secrets.NEXT_PUBLIC_ALGOLIA_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          path: website

      - uses: actions/setup-node@v4
        with:
          node-version-file: website/.nvmrc

      - uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false

      - run: pnpm install --frozen-lockfile
        working-directory: website

      - run: pnpm exec node scripts/update_algolia_index.js
        working-directory: website

      - name: Checkout Content repo
        uses: actions/checkout@v4
        with:
          repository: SSWConsulting/SSW.Rules.Content
          ref: tina/Content_Azure_Deployment-Categories
          path: content-repo
          token: ${{ secrets.POC_PAT_GILLES }} # TODO: change the POC_PAT_GILLES by GitHub Token when SysAdmin will have setup GitHub App

      - name: Copy test.json
        run: cp content-repo/scripts/tina-migration/rule-category-mapping.json website/rule-category-mapping.json

      - name: Commit & Push
        working-directory: website
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add rule-category-mapping.json
          git commit -m "Update rule-category-mapping.json from Content repo" || echo "No changes"
          git push

      - run: pnpm build
        working-directory: website
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          NEXT_PUBLIC_TINA_BRANCH:    content_deployment
          TINA_TOKEN:                 ${{ secrets.TINA_TOKEN }}

      - run: cp website/staticwebapp.config.json website/out/

      - uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: upload
          skip_app_build: true
          skip_api_build: true
          app_location: website/out
